@model List<LinhKienShop.Models.CartItem>

@{
    ViewData["Title"] = "Giỏ Hàng";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<div class="container py-5">
    <h2 class="custom-title fw-bold mb-4 text-center"><i class="fas fa-shopping-cart me-2 text-primary"></i>Giỏ Hàng Của Bạn</h2>

    <div id="cart-content">
        @if (Model.Any())
        {
            <div class="card shadow-lg border-0 rounded-4 p-4 bg-light">
                <table class="table table-hover table-bordered align-middle text-center">
                    <thead class="table-dark">
                        <tr>
                            <th>Hình ảnh</th>
                            <th>Tên sản phẩm</th>
                            <th>Giá</th>
                            <th>Số lượng</th>
                            <th>Thành tiền</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr data-id="@item.MaSanPham">
                                <td>
                                    <img src="@item.HinhSanPhamPath" alt="@item.TenSanPham" style="width: 80px; height: 80px; object-fit: cover;" class="rounded shadow-sm">
                                </td>
                                <td class="fw-semibold">@item.TenSanPham</td>
                                <td class="text-danger fw-bold">@item.GiaKhuyenMai.ToString("N0") VNĐ</td>
                                <td>
                                    <div class="custom-quantity d-flex align-items-center justify-content-center">
                                        <button class="btn btn-outline-dark btn-sm quantity-btn decrease" type="button"><i class="fas fa-minus"></i></button>
                                        <input type="number" class="form-control text-center mx-2 quantity" value="@item.SoLuong" min="1" max="@item.SoLuongTonKho" style="width: 70px; border-radius: 8px;">
                                        <button class="btn btn-outline-dark btn-sm quantity-btn increase" type="button"><i class="fas fa-plus"></i></button>
                                    </div>
                                </td>
                                <td class="thanh-tien text-success fw-bold">@item.ThanhTien.ToString("N0") VNĐ</td>
                                <td>
                                    <button class="btn btn-danger btn-sm rounded-pill delete-item transition-hover"><i class="fas fa-trash-alt"></i></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="d-flex justify-content-between align-items-center mt-4 p-3 bg-white rounded-3 shadow-sm">
                    <h4 class="mb-0">Tổng tiền: <span id="total-amount" class="fw-bold text-danger">@Model.Sum(item => item.ThanhTien).ToString("N0") VNĐ</span></h4>
                    <a href="@Url.Action("Checkout", "GioHang")" class="btn btn-primary btn-lg rounded-pill transition-hover px-5">Thanh toán</a>
                </div>
            </div>
        }
        else
        {
            <div class="card shadow-lg border-0 rounded-4 p-5 text-center bg-light">
                <h4 class="text-muted mb-4"><i class="fas fa-shopping-cart me-2"></i>Giỏ hàng của bạn đang trống!</h4>
                <a asp-controller="TrangChu" asp-action="Index" class="btn btn-primary rounded-pill px-5 py-2 transition-hover">Tiếp tục mua sắm</a>
            </div>
        }
    </div>
</div>

<style>
    .card {
        background: linear-gradient(135deg, #ffffff, #f8f9fa);
        transition: all 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

    .custom-title {
        color: #1e3a8a;
        font-style: italic;
    }

    .table th, .table td {
        vertical-align: middle;
    }

    .quantity-btn {
        border-radius: 50%;
        width: 32px;
        height: 32px;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }

        .quantity-btn:hover {
            background-color: #007bff;
            color: #fff;
            border-color: #007bff;
        }

    .custom-quantity input {
        border-radius: 8px;
        height: 38px;
        font-weight: bold;
    }

    .transition-hover:hover {
        transform: scale(1.05);
        box-shadow: 0 5px 15px rgba(0,123,255,0.4);
    }

    .btn-primary {
        background: linear-gradient(45deg, #007bff, #00d4ff);
        border: none;
    }

        .btn-primary:hover {
            background: linear-gradient(45deg, #0056b3, #0099cc);
        }
</style>

@section Scripts {
    <script>
        function showModal(message, isSuccess) {
            $('#modalMessage').text(message);
            $('#modalHeader').removeClass('bg-success bg-danger bg-gradient');
            $('#modalHeader').addClass(isSuccess ? 'bg-success' : 'bg-danger');
            $('#customModal').modal('show');
        }

        $(document).ready(function () {
            // Tăng số lượng
            $('.increase').on('click', function () {
                let row = $(this).closest('tr');
                let input = row.find('.quantity');
                let currentQty = parseInt(input.val());
                let max = parseInt(input.attr('max'));
                if (currentQty < max) {
                    updateQuantity(row.data('id'), currentQty + 1, row);
                }
            });

            // Giảm số lượng
            $('.decrease').on('click', function () {
                let row = $(this).closest('tr');
                let input = row.find('.quantity');
                let currentQty = parseInt(input.val());
                if (currentQty > 1) {
                    updateQuantity(row.data('id'), currentQty - 1, row);
                }
            });

            // Xóa sản phẩm
            $('.delete-item').on('click', function () {
                let row = $(this).closest('tr');
                deleteItem(row.data('id'), row);
            });

            // Cập nhật số lượng qua input
            $('.quantity').on('change', function () {
                let row = $(this).closest('tr');
                let newQty = parseInt($(this).val());
                let max = parseInt($(this).attr('max'));
                if (newQty > max) {
                    $(this).val(max);
                    newQty = max;
                    showModal('Số lượng vượt quá tồn kho.', false);
                }
                if (newQty < 1) {
                    $(this).val(1);
                    newQty = 1;
                }
                updateQuantity(row.data('id'), newQty, row);
            });
        });

        function updateQuantity(maSanPham, soLuong, row) {
            $.ajax({
                url: '/GioHang/CapNhatSoLuong',
                type: 'POST',
                data: { maSanPham: maSanPham, soLuong: soLuong },
                success: function (response) {
                    if (response.success) {
                        if (soLuong === 0) {
                            row.remove();
                            showModal(response.message, true);
                        } else {
                            row.find('.quantity').val(soLuong);
                            row.find('.thanh-tien').text(response.thanhTien.toLocaleString('vi-VN') + ' VNĐ');
                            showModal(response.message, true);
                        }
                        $('#total-amount').text(response.total.toLocaleString('vi-VN') + ' VNĐ');
                        $('.cart-count').text(response.cartCount);
                        checkCartEmpty();
                    } else {
                        showModal(response.message, false);
                    }
                },
                error: function () {
                    showModal('Có lỗi xảy ra khi cập nhật số lượng.', false);
                }
            });
        }

        function deleteItem(maSanPham, row) {
            $.ajax({
                url: '/GioHang/XoaKhoiGio',
                type: 'POST',
                data: { maSanPham: maSanPham },
                success: function (response) {
                    if (response.success) {
                        row.remove();
                        $('#total-amount').text(response.total.toLocaleString('vi-VN') + ' VNĐ');
                        $('.cart-count').text(response.cartCount);
                        showModal(response.message, true);
                        checkCartEmpty();
                    } else {
                        showModal(response.message, false);
                    }
                },
                error: function () {
                    showModal('Có lỗi xảy ra khi xóa sản phẩm.', false);
                }
            });
        }

        function checkCartEmpty() {
            if ($('tbody tr').length === 0) {
                $('#cart-content').html(`
                    <div class="card shadow-lg border-0 rounded-4 p-5 text-center bg-light">
                        <h4 class="text-muted mb-4"><i class="fas fa-shopping-cart me-2"></i>Giỏ hàng của bạn đang trống!</h4>
                        <a href="@Url.Action("Index", "TrangChu")" class="btn btn-primary rounded-pill px-5 py-2 transition-hover">Tiếp tục mua sắm</a>
                    </div>
                `);
            }
        }
    </script>
}