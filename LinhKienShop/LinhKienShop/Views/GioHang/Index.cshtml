@model List<LinhKienShop.Models.CartItem>

@{
    ViewData["Title"] = "Giỏ Hàng";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<div class="container py-5">
    <h2 class="custom-title fw-bold mb-5 text-center">
        <i class="fas fa-shopping-cart me-2 text-primary"></i>Giỏ Hàng Của Bạn
    </h2>

    <div id="cart-content">
        @if (Model.Any())
        {
            <div class="card shadow-lg border-0 rounded-4 p-4 bg-light animate__animated animate__fadeIn">
                <table class="table table-hover table-bordered align-middle text-center">
                    <thead class="table-dark bg-gradient">
                        <tr>
                            <th><input type="checkbox" id="selectAll" checked></th>
                            <th>Hình ảnh</th>
                            <th>Tên sản phẩm</th>
                            <th>Giá</th>
                            <th>Số lượng</th>
                            <th>Thành tiền</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr data-id="@item.MaSanPham" class="animate__animated animate__fadeInUp">
                                <td>
                                    <input type="checkbox" class="select-item" data-id="@item.MaSanPham" checked>
                                </td>
                                <td>
                                    <img src="@item.HinhSanPhamPath" alt="@item.TenSanPham" style="width: 80px; height: 80px; object-fit: cover;" class="rounded shadow-sm">
                                </td>
                                <td class="fw-semibold">@item.TenSanPham</td>
                                <td class="text-danger fw-bold">@item.GiaKhuyenMai.ToString("N0") VNĐ</td>
                                <td>
                                    <div class="custom-quantity d-flex align-items-center justify-content-center">
                                        <button class="btn btn-outline-dark btn-sm quantity-btn decrease rounded-circle"><i class="fas fa-minus"></i></button>
                                        <input type="number" class="form-control text-center mx-2 quantity" value="@item.SoLuong" min="1" max="@item.SoLuongTonKho" style="width: 60px; border-radius: 8px;">
                                        <button class="btn btn-outline-dark btn-sm quantity-btn increase rounded-circle"><i class="fas fa-plus"></i></button>
                                    </div>
                                </td>
                                <td class="thanh-tien text-success fw-bold" data-thanh-tien="@item.ThanhTien">@item.ThanhTien.ToString("N0") VNĐ</td>
                                <td>
                                    <button class="btn btn-danger btn-sm rounded-pill delete-item transition-hover"><i class="fas fa-trash-alt"></i></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="d-flex justify-content-between align-items-center mt-4 p-4 bg-white rounded-3 shadow-sm">
                    <h4 class="mb-0">
                        Tạm tính: <span id="total-amount" class="fw-bold text-danger" data-total="@Model.Sum(item => item.ThanhTien)">@Model.Sum(item => item.ThanhTien).ToString("N0") VNĐ</span>
                    </h4>
                    <a asp-controller="MaGiamGia" asp-action="ThanhToan" class="btn btn-primary btn-lg rounded-pill checkout-btn px-5 py-2">
                        <i class="fas fa-credit-card me-2"></i>Thanh Toán
                    </a>
                </div>
            </div>
        }
        else
        {
            <div class="card shadow-lg border-0 rounded-4 p-5 text-center bg-light animate__animated animate__fadeIn">
                <h4 class="text-muted mb-4"><i class="fas fa-shopping-cart me-2"></i>Giỏ hàng của bạn đang trống!</h4>
                <a asp-controller="TrangChu" asp-action="Index" class="btn btn-primary rounded-pill px-5 py-2 transition-hover">Tiếp tục mua sắm</a>
            </div>
        }
    </div>
</div>

<style>
    /* Gradient nền và hiệu ứng card */
    .card {
        background: linear-gradient(145deg, #ffffff, #f1f5f9);
        border-radius: 12px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);
        }

    /* Tiêu đề */
    .custom-title {
        color: #1e40af;
        font-size: 2.5rem;
        letter-spacing: 1px;
        text-transform: uppercase;
        background: linear-gradient(to right, #1e40af, #3b82f6);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    /* Bảng */
    .table {
        border-radius: 8px;
        overflow: hidden;
    }

        .table th, .table td {
            vertical-align: middle;
            padding: 1rem;
        }

    .table-dark {
        background: linear-gradient(45deg, #1e3a8a, #3b82f6);
        color: #fff;
    }

    /* Nút số lượng */
    .quantity-btn {
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        background: #f1f5f9;
        border: 1px solid #d1d5db;
    }

        .quantity-btn:hover {
            background: #3b82f6;
            color: #fff;
            border-color: #3b82f6;
            transform: scale(1.1);
        }

    .custom-quantity input {
        border: 1px solid #d1d5db;
        border-radius: 8px;
        height: 40px;
        font-weight: 600;
        transition: border-color 0.3s ease;
    }

        .custom-quantity input:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 8px rgba(59, 130, 246, 0.3);
        }

    /* Nút xóa */
    .delete-item {
        background: linear-gradient(45deg, #ef4444, #f87171);
        border: none;
        transition: all 0.3s ease;
    }

        .delete-item:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);
        }

    /* Nút thanh toán */
    .checkout-btn {
        background: linear-gradient(45deg, #3b82f6, #60a5fa);
        border: none;
        font-size: 1.1rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
    }

        .checkout-btn:hover {
            background: linear-gradient(45deg, #2563eb, #3b82f6);
            transform: translateY(-2px);
            box-shadow: 0 8px 16px rgba(59, 130, 246, 0.4);
        }

        .checkout-btn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 300%;
            height: 300%;
            background: rgba(255, 255, 255, 0.15);
            transform: translate(-50%, -50%) rotate(45deg);
            transition: all 0.5s ease;
            opacity: 0;
        }

        .checkout-btn:hover::before {
            opacity: 1;
            width: 0;
            height: 0;
        }

    /* Responsive */
    @@media (max-width: 768px) {
        .custom-title

    {
        font-size: 1.8rem;
    }

    .table th, .table td {
        padding: 0.5rem;
        font-size: 0.9rem;
    }

    .custom-quantity input {
        width: 50px;
    }

    .checkout-btn {
        padding: 0.5rem 1.5rem;
        font-size: 1rem;
    }

    }
</style>

@section Scripts {
    <!-- Giữ nguyên JavaScript hiện có -->
    <script>
        function showModal(message, isSuccess) {
            $('#modalMessage').text(message);
            $('#modalHeader').removeClass('bg-success bg-danger bg-gradient');
            $('#modalHeader').addClass(isSuccess ? 'bg-success' : 'bg-danger');
            $('#customModal').modal('show');
        }

        function updateTotalAmount() {
            let total = 0;
            $('.select-item:checked').each(function () {
                let row = $(this).closest('tr');
                let thanhTien = parseFloat(row.find('.thanh-tien').data('thanh-tien'));
                total += thanhTien;
            });
            $('#total-amount').text(total.toLocaleString('vi-VN') + ' VNĐ');
            $('#total-amount').data('total', total);
        }

        $(document).ready(function () {
            $('#selectAll').on('change', function () {
                $('.select-item').prop('checked', this.checked);
                updateTotalAmount();
            });

            $('.select-item').on('change', function () {
                if (!this.checked && $('#selectAll').is(':checked')) {
                    $('#selectAll').prop('checked', false);
                } else if ($('.select-item').length === $('.select-item:checked').length) {
                    $('#selectAll').prop('checked', true);
                }
                updateTotalAmount();
            });

            $('.increase').on('click', function () {
                let row = $(this).closest('tr');
                let input = row.find('.quantity');
                let currentQty = parseInt(input.val());
                let max = parseInt(input.attr('max'));
                if (currentQty < max) {
                    updateQuantity(row.data('id'), currentQty + 1, row);
                }
            });

            $('.decrease').on('click', function () {
                let row = $(this).closest('tr');
                let input = row.find('.quantity');
                let currentQty = parseInt(input.val());
                if (currentQty > 1) {
                    updateQuantity(row.data('id'), currentQty - 1, row);
                }
            });

            $('.delete-item').on('click', function () {
                let row = $(this).closest('tr');
                deleteItem(row.data('id'), row);
            });

            $('.quantity').on('change', function () {
                let row = $(this).closest('tr');
                let newQty = parseInt($(this).val());
                let max = parseInt($(this).attr('max'));
                if (newQty > max) {
                    $(this).val(max);
                    newQty = max;
                    showModal('Số lượng vượt quá tồn kho.', false);
                }
                if (newQty < 1) {
                    $(this).val(1);
                    newQty = 1;
                }
                updateQuantity(row.data('id'), newQty, row);
            });
        });

        function updateQuantity(maSanPham, soLuong, row) {
            $.ajax({
                url: '/GioHang/CapNhatSoLuong',
                type: 'POST',
                data: { maSanPham: maSanPham, soLuong: soLuong },
                success: function (response) {
                    if (response.success) {
                        if (soLuong === 0) {
                            row.remove();
                            showModal(response.message, true);
                        } else {
                            row.find('.quantity').val(soLuong);
                            row.find('.thanh-tien')
                                .text(response.thanhTien.toLocaleString('vi-VN') + ' VNĐ')
                                .data('thanh-tien', response.thanhTien);
                        }
                        $('#total-amount').text(response.total.toLocaleString('vi-VN') + ' VNĐ');
                        $('#total-amount').data('total', response.total);
                        $('.cart-count').text(response.cartCount);
                        updateTotalAmount();
                        checkCartEmpty();
                    } else {
                        showModal(response.message, false);
                    }
                },
                error: function () {
                    showModal('Có lỗi xảy ra khi cập nhật số lượng.', false);
                }
            });
        }

        function deleteItem(maSanPham, row) {
            $.ajax({
                url: '/GioHang/XoaKhoiGio',
                type: 'POST',
                data: { maSanPham: maSanPham },
                success: function (response) {
                    if (response.success) {
                        row.remove();
                        $('#total-amount').text(response.total.toLocaleString('vi-VN') + ' VNĐ');
                        $('#total-amount').data('total', response.total);
                        $('.cart-count').text(response.cartCount);
                        showModal(response.message, true);
                        updateTotalAmount();
                        checkCartEmpty();
                    } else {
                        showModal(response.message, false);
                    }
                },
                error: function () {
                    showModal('Có lỗi xảy ra khi xóa sản phẩm.', false);
                }
            });
        }

        function checkCartEmpty() {
            if ($('tbody tr').length === 0) {
                $('#cart-content').html(`
                    <div class="card shadow-lg border-0 rounded-4 p-5 text-center bg-light animate__animated animate__fadeIn">
                        <h4 class="text-muted mb-4"><i class="fas fa-shopping-cart me-2"></i>Giỏ hàng của bạn đang trống!</h4>
                        <a href="@Url.Action("Index", "TrangChu")" class="btn btn-primary rounded-pill px-5 py-2 transition-hover">Tiếp tục mua sắm</a>
                    </div>
                `);
            }
        }
    </script>
}